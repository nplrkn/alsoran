// Copyright (c) Nicholas Larkin
// Autogenerated from NGAP-PDU-Contents.asn

use super::common::*;
use super::ies::*;

// PduSessionResourceSetupRequest
#[derive(Clone)]
pub struct PduSessionResourceSetupRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ran_paging_priority: Option<RanPagingPriority>,
    pub nas_pdu: Option<NasPdu>,
    pub pdu_session_resource_setup_list_su_req: PduSessionResourceSetupListSuReq,
    pub ue_aggregate_maximum_bit_rate: Option<UeAggregateMaximumBitRate>,
}

// PduSessionResourceSetupResponse
#[derive(Clone)]
pub struct PduSessionResourceSetupResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_setup_list_su_res: Option<PduSessionResourceSetupListSuRes>,
    pub pdu_session_resource_failed_to_setup_list_su_res:
        Option<PduSessionResourceFailedToSetupListSuRes>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// PduSessionResourceReleaseCommand
#[derive(Clone)]
pub struct PduSessionResourceReleaseCommand {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ran_paging_priority: Option<RanPagingPriority>,
    pub nas_pdu: Option<NasPdu>,
    pub pdu_session_resource_to_release_list_rel_cmd: PduSessionResourceToReleaseListRelCmd,
}

// PduSessionResourceReleaseResponse
#[derive(Clone)]
pub struct PduSessionResourceReleaseResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_released_list_rel_res: PduSessionResourceReleasedListRelRes,
    pub user_location_information: Option<UserLocationInformation>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// PduSessionResourceModifyRequest
#[derive(Clone)]
pub struct PduSessionResourceModifyRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ran_paging_priority: Option<RanPagingPriority>,
    pub pdu_session_resource_modify_list_mod_req: PduSessionResourceModifyListModReq,
}

// PduSessionResourceModifyResponse
#[derive(Clone)]
pub struct PduSessionResourceModifyResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_modify_list_mod_res: Option<PduSessionResourceModifyListModRes>,
    pub pdu_session_resource_failed_to_modify_list_mod_res:
        Option<PduSessionResourceFailedToModifyListModRes>,
    pub user_location_information: Option<UserLocationInformation>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// PduSessionResourceNotify
#[derive(Clone)]
pub struct PduSessionResourceNotify {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_notify_list: Option<PduSessionResourceNotifyList>,
    pub pdu_session_resource_released_list_not: Option<PduSessionResourceReleasedListNot>,
    pub user_location_information: Option<UserLocationInformation>,
}

// PduSessionResourceModifyIndication
#[derive(Clone)]
pub struct PduSessionResourceModifyIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_modify_list_mod_ind: PduSessionResourceModifyListModInd,
    pub user_location_information: Option<UserLocationInformation>,
}

// PduSessionResourceModifyConfirm
#[derive(Clone)]
pub struct PduSessionResourceModifyConfirm {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_modify_list_mod_cfm: Option<PduSessionResourceModifyListModCfm>,
    pub pdu_session_resource_failed_to_modify_list_mod_cfm:
        Option<PduSessionResourceFailedToModifyListModCfm>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// InitialContextSetupRequest
#[derive(Clone)]
pub struct InitialContextSetupRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub old_amf: Option<AmfName>,
    pub ue_aggregate_maximum_bit_rate: Option<UeAggregateMaximumBitRate>,
    pub core_network_assistance_information_for_inactive:
        Option<CoreNetworkAssistanceInformationForInactive>,
    pub guami: Guami,
    pub pdu_session_resource_setup_list_cxt_req: Option<PduSessionResourceSetupListCxtReq>,
    pub allowed_nssai: AllowedNssai,
    pub ue_security_capabilities: UeSecurityCapabilities,
    pub security_key: SecurityKey,
    pub trace_activation: Option<TraceActivation>,
    pub mobility_restriction_list: Option<MobilityRestrictionList>,
    pub ue_radio_capability: Option<UeRadioCapability>,
    pub index_to_rfsp: Option<IndexToRfsp>,
    pub masked_imeisv: Option<MaskedImeisv>,
    pub nas_pdu: Option<NasPdu>,
    pub emergency_fallback_indicator: Option<EmergencyFallbackIndicator>,
    pub rrc_inactive_transition_report_request: Option<RrcInactiveTransitionReportRequest>,
    pub ue_radio_capability_for_paging: Option<UeRadioCapabilityForPaging>,
    pub redirection_voice_fallback: Option<RedirectionVoiceFallback>,
    pub location_reporting_request_type: Option<LocationReportingRequestType>,
    pub cn_assisted_ran_tuning: Option<CnAssistedRanTuning>,
    pub srvcc_operation_possible: Option<SrvccOperationPossible>,
    pub iab_authorized: Option<IabAuthorized>,
    pub enhanced_coverage_restriction: Option<EnhancedCoverageRestriction>,
    pub extended_connected_time: Option<ExtendedConnectedTime>,
    pub ue_differentiation_info: Option<UeDifferentiationInfo>,
    pub nrv2x_services_authorized: Option<Nrv2xServicesAuthorized>,
    pub ltev2x_services_authorized: Option<Ltev2xServicesAuthorized>,
    pub nrue_sidelink_aggregate_maximum_bitrate: Option<NrueSidelinkAggregateMaximumBitrate>,
    pub lteue_sidelink_aggregate_maximum_bitrate: Option<LteueSidelinkAggregateMaximumBitrate>,
    pub pc5_qos_parameters: Option<Pc5QosParameters>,
    pub c_emode_brestricted: Option<CEmodeBrestricted>,
    pub ue_up_c_iot_support: Option<UeUpCIotSupport>,
    pub rg_level_wireline_access_characteristics: Option<RgLevelWirelineAccessCharacteristics>,
    pub management_based_mdt_plmn_list: Option<MdtPlmnList>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
}

// InitialContextSetupResponse
#[derive(Clone)]
pub struct InitialContextSetupResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_setup_list_cxt_res: Option<PduSessionResourceSetupListCxtRes>,
    pub pdu_session_resource_failed_to_setup_list_cxt_res:
        Option<PduSessionResourceFailedToSetupListCxtRes>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// InitialContextSetupFailure
#[derive(Clone)]
pub struct InitialContextSetupFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_failed_to_setup_list_cxt_fail:
        Option<PduSessionResourceFailedToSetupListCxtFail>,
    pub cause: Cause,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// UeContextReleaseRequest
#[derive(Clone)]
pub struct UeContextReleaseRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_list_cxt_rel_req: Option<PduSessionResourceListCxtRelReq>,
    pub cause: Cause,
}

// UeContextReleaseCommand
#[derive(Clone)]
pub struct UeContextReleaseCommand {
    pub ue_ngap_i_ds: UeNgapIDs,
    pub cause: Cause,
}

// UeContextReleaseComplete
#[derive(Clone)]
pub struct UeContextReleaseComplete {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub user_location_information: Option<UserLocationInformation>,
    pub info_on_recommended_cells_and_ran_nodes_for_paging:
        Option<InfoOnRecommendedCellsAndRanNodesForPaging>,
    pub pdu_session_resource_list_cxt_rel_cpl: Option<PduSessionResourceListCxtRelCpl>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
    pub paging_assis_datafor_c_ecapab_ue: Option<PagingAssisDataforCEcapabUe>,
}

// UeContextResumeRequest
#[derive(Clone)]
pub struct UeContextResumeRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub rrc_resume_cause: RrcEstablishmentCause,
    pub pdu_session_resource_resume_list_res_req: Option<PduSessionResourceResumeListResReq>,
    pub pdu_session_resource_failed_to_resume_list_res_req:
        Option<PduSessionResourceFailedToResumeListResReq>,
    pub suspend_request_indication: Option<SuspendRequestIndication>,
    pub info_on_recommended_cells_and_ran_nodes_for_paging:
        Option<InfoOnRecommendedCellsAndRanNodesForPaging>,
    pub paging_assis_datafor_c_ecapab_ue: Option<PagingAssisDataforCEcapabUe>,
}

// UeContextResumeResponse
#[derive(Clone)]
pub struct UeContextResumeResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_resume_list_res_res: Option<PduSessionResourceResumeListResRes>,
    pub pdu_session_resource_failed_to_resume_list_res_res:
        Option<PduSessionResourceFailedToResumeListResRes>,
    pub security_context: Option<SecurityContext>,
    pub suspend_response_indication: Option<SuspendResponseIndication>,
    pub extended_connected_time: Option<ExtendedConnectedTime>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// UeContextResumeFailure
#[derive(Clone)]
pub struct UeContextResumeFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub cause: Cause,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// UeContextSuspendRequest
#[derive(Clone)]
pub struct UeContextSuspendRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub info_on_recommended_cells_and_ran_nodes_for_paging:
        Option<InfoOnRecommendedCellsAndRanNodesForPaging>,
    pub paging_assis_datafor_c_ecapab_ue: Option<PagingAssisDataforCEcapabUe>,
    pub pdu_session_resource_suspend_list_sus_req: Option<PduSessionResourceSuspendListSusReq>,
}

// UeContextSuspendResponse
#[derive(Clone)]
pub struct UeContextSuspendResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub security_context: Option<SecurityContext>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// UeContextSuspendFailure
#[derive(Clone)]
pub struct UeContextSuspendFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub cause: Cause,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// UeContextModificationRequest
#[derive(Clone)]
pub struct UeContextModificationRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ran_paging_priority: Option<RanPagingPriority>,
    pub security_key: Option<SecurityKey>,
    pub index_to_rfsp: Option<IndexToRfsp>,
    pub ue_aggregate_maximum_bit_rate: Option<UeAggregateMaximumBitRate>,
    pub ue_security_capabilities: Option<UeSecurityCapabilities>,
    pub core_network_assistance_information_for_inactive:
        Option<CoreNetworkAssistanceInformationForInactive>,
    pub emergency_fallback_indicator: Option<EmergencyFallbackIndicator>,
    pub new_amf_ue_ngap_id: Option<AmfUeNgapId>,
    pub rrc_inactive_transition_report_request: Option<RrcInactiveTransitionReportRequest>,
    pub new_guami: Option<Guami>,
    pub cn_assisted_ran_tuning: Option<CnAssistedRanTuning>,
    pub srvcc_operation_possible: Option<SrvccOperationPossible>,
    pub iab_authorized: Option<IabAuthorized>,
    pub nrv2x_services_authorized: Option<Nrv2xServicesAuthorized>,
    pub ltev2x_services_authorized: Option<Ltev2xServicesAuthorized>,
    pub nrue_sidelink_aggregate_maximum_bitrate: Option<NrueSidelinkAggregateMaximumBitrate>,
    pub lteue_sidelink_aggregate_maximum_bitrate: Option<LteueSidelinkAggregateMaximumBitrate>,
    pub pc5_qos_parameters: Option<Pc5QosParameters>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
    pub rg_level_wireline_access_characteristics: Option<RgLevelWirelineAccessCharacteristics>,
}

// UeContextModificationResponse
#[derive(Clone)]
pub struct UeContextModificationResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub rrc_state: Option<RrcState>,
    pub user_location_information: Option<UserLocationInformation>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// UeContextModificationFailure
#[derive(Clone)]
pub struct UeContextModificationFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub cause: Cause,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// RrcInactiveTransitionReport
#[derive(Clone)]
pub struct RrcInactiveTransitionReport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub rrc_state: RrcState,
    pub user_location_information: UserLocationInformation,
}

// RetrieveUeInformation
#[derive(Clone)]
pub struct RetrieveUeInformation {
    pub five_g_s_tmsi: FiveGSTmsi,
}

// UeInformationTransfer
#[derive(Clone)]
pub struct UeInformationTransfer {
    pub five_g_s_tmsi: FiveGSTmsi,
    pub nb_iot_ue_priority: Option<NbIotUePriority>,
    pub ue_radio_capability: Option<UeRadioCapability>,
    pub s_nssai: Option<SNssai>,
    pub allowed_nssai: Option<AllowedNssai>,
    pub ue_differentiation_info: Option<UeDifferentiationInfo>,
}

// RancpRelocationIndication
#[derive(Clone)]
pub struct RancpRelocationIndication {
    pub ran_ue_ngap_id: RanUeNgapId,
    pub five_g_s_tmsi: FiveGSTmsi,
    pub eutra_cgi: EutraCgi,
    pub tai: Tai,
    pub ul_cp_security_information: UlCpSecurityInformation,
}

// HandoverRequired
#[derive(Clone)]
pub struct HandoverRequired {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub handover_type: HandoverType,
    pub cause: Cause,
    pub target_id: TargetId,
    pub direct_forwarding_path_availability: Option<DirectForwardingPathAvailability>,
    pub pdu_session_resource_list_ho_rqd: PduSessionResourceListHoRqd,
    pub source_to_target_transparent_container: SourceToTargetTransparentContainer,
}

// HandoverCommand
#[derive(Clone)]
pub struct HandoverCommand {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub handover_type: HandoverType,
    pub nas_security_parameters_from_ngran: Option<NasSecurityParametersFromNgran>,
    pub pdu_session_resource_handover_list: Option<PduSessionResourceHandoverList>,
    pub pdu_session_resource_to_release_list_ho_cmd: Option<PduSessionResourceToReleaseListHoCmd>,
    pub target_to_source_transparent_container: TargetToSourceTransparentContainer,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// HandoverPreparationFailure
#[derive(Clone)]
pub struct HandoverPreparationFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub cause: Cause,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
    pub targetto_source_failure_transparent_container:
        Option<TargettoSourceFailureTransparentContainer>,
}

// HandoverRequest
#[derive(Clone)]
pub struct HandoverRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub handover_type: HandoverType,
    pub cause: Cause,
    pub ue_aggregate_maximum_bit_rate: UeAggregateMaximumBitRate,
    pub core_network_assistance_information_for_inactive:
        Option<CoreNetworkAssistanceInformationForInactive>,
    pub ue_security_capabilities: UeSecurityCapabilities,
    pub security_context: SecurityContext,
    pub new_security_context_ind: Option<NewSecurityContextInd>,
    pub nasc: Option<NasPdu>,
    pub pdu_session_resource_setup_list_ho_req: PduSessionResourceSetupListHoReq,
    pub allowed_nssai: AllowedNssai,
    pub trace_activation: Option<TraceActivation>,
    pub masked_imeisv: Option<MaskedImeisv>,
    pub source_to_target_transparent_container: SourceToTargetTransparentContainer,
    pub mobility_restriction_list: Option<MobilityRestrictionList>,
    pub location_reporting_request_type: Option<LocationReportingRequestType>,
    pub rrc_inactive_transition_report_request: Option<RrcInactiveTransitionReportRequest>,
    pub guami: Guami,
    pub redirection_voice_fallback: Option<RedirectionVoiceFallback>,
    pub cn_assisted_ran_tuning: Option<CnAssistedRanTuning>,
    pub srvcc_operation_possible: Option<SrvccOperationPossible>,
    pub iab_authorized: Option<IabAuthorized>,
    pub enhanced_coverage_restriction: Option<EnhancedCoverageRestriction>,
    pub ue_differentiation_info: Option<UeDifferentiationInfo>,
    pub nrv2x_services_authorized: Option<Nrv2xServicesAuthorized>,
    pub ltev2x_services_authorized: Option<Ltev2xServicesAuthorized>,
    pub nrue_sidelink_aggregate_maximum_bitrate: Option<NrueSidelinkAggregateMaximumBitrate>,
    pub lteue_sidelink_aggregate_maximum_bitrate: Option<LteueSidelinkAggregateMaximumBitrate>,
    pub pc5_qos_parameters: Option<Pc5QosParameters>,
    pub c_emode_brestricted: Option<CEmodeBrestricted>,
    pub ue_up_c_iot_support: Option<UeUpCIotSupport>,
    pub management_based_mdt_plmn_list: Option<MdtPlmnList>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
    pub extended_connected_time: Option<ExtendedConnectedTime>,
}

// HandoverRequestAcknowledge
#[derive(Clone)]
pub struct HandoverRequestAcknowledge {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_admitted_list: PduSessionResourceAdmittedList,
    pub pdu_session_resource_failed_to_setup_list_ho_ack:
        Option<PduSessionResourceFailedToSetupListHoAck>,
    pub target_to_source_transparent_container: TargetToSourceTransparentContainer,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// HandoverFailure
#[derive(Clone)]
pub struct HandoverFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub cause: Cause,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
    pub targetto_source_failure_transparent_container:
        Option<TargettoSourceFailureTransparentContainer>,
}

// HandoverNotify
#[derive(Clone)]
pub struct HandoverNotify {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub user_location_information: UserLocationInformation,
    pub notify_source_ngran_node: Option<NotifySourceNgranNode>,
}

// PathSwitchRequest
#[derive(Clone)]
pub struct PathSwitchRequest {
    pub ran_ue_ngap_id: RanUeNgapId,
    pub source_amf_ue_ngap_id: AmfUeNgapId,
    pub user_location_information: UserLocationInformation,
    pub ue_security_capabilities: UeSecurityCapabilities,
    pub pdu_session_resource_to_be_switched_dl_list: PduSessionResourceToBeSwitchedDlList,
    pub pdu_session_resource_failed_to_setup_list_ps_req:
        Option<PduSessionResourceFailedToSetupListPsReq>,
    pub rrc_resume_cause: Option<RrcEstablishmentCause>,
}

// PathSwitchRequestAcknowledge
#[derive(Clone)]
pub struct PathSwitchRequestAcknowledge {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ue_security_capabilities: Option<UeSecurityCapabilities>,
    pub security_context: SecurityContext,
    pub new_security_context_ind: Option<NewSecurityContextInd>,
    pub pdu_session_resource_switched_list: PduSessionResourceSwitchedList,
    pub pdu_session_resource_released_list_ps_ack: Option<PduSessionResourceReleasedListPsAck>,
    pub allowed_nssai: AllowedNssai,
    pub core_network_assistance_information_for_inactive:
        Option<CoreNetworkAssistanceInformationForInactive>,
    pub rrc_inactive_transition_report_request: Option<RrcInactiveTransitionReportRequest>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
    pub redirection_voice_fallback: Option<RedirectionVoiceFallback>,
    pub cn_assisted_ran_tuning: Option<CnAssistedRanTuning>,
    pub srvcc_operation_possible: Option<SrvccOperationPossible>,
    pub enhanced_coverage_restriction: Option<EnhancedCoverageRestriction>,
    pub extended_connected_time: Option<ExtendedConnectedTime>,
    pub ue_differentiation_info: Option<UeDifferentiationInfo>,
    pub nrv2x_services_authorized: Option<Nrv2xServicesAuthorized>,
    pub ltev2x_services_authorized: Option<Ltev2xServicesAuthorized>,
    pub nrue_sidelink_aggregate_maximum_bitrate: Option<NrueSidelinkAggregateMaximumBitrate>,
    pub lteue_sidelink_aggregate_maximum_bitrate: Option<LteueSidelinkAggregateMaximumBitrate>,
    pub pc5_qos_parameters: Option<Pc5QosParameters>,
    pub c_emode_brestricted: Option<CEmodeBrestricted>,
    pub ue_up_c_iot_support: Option<UeUpCIotSupport>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
}

// PathSwitchRequestFailure
#[derive(Clone)]
pub struct PathSwitchRequestFailure {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_released_list_ps_fail: PduSessionResourceReleasedListPsFail,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// HandoverCancel
#[derive(Clone)]
pub struct HandoverCancel {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub cause: Cause,
}

// HandoverCancelAcknowledge
#[derive(Clone)]
pub struct HandoverCancelAcknowledge {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// HandoverSuccess
#[derive(Clone)]
pub struct HandoverSuccess {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
}

// UplinkRanEarlyStatusTransfer
#[derive(Clone)]
pub struct UplinkRanEarlyStatusTransfer {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub early_status_transfer_transparent_container: EarlyStatusTransferTransparentContainer,
}

// DownlinkRanEarlyStatusTransfer
#[derive(Clone)]
pub struct DownlinkRanEarlyStatusTransfer {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub early_status_transfer_transparent_container: EarlyStatusTransferTransparentContainer,
}

// UplinkRanStatusTransfer
#[derive(Clone)]
pub struct UplinkRanStatusTransfer {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ran_status_transfer_transparent_container: RanStatusTransferTransparentContainer,
}

// DownlinkRanStatusTransfer
#[derive(Clone)]
pub struct DownlinkRanStatusTransfer {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ran_status_transfer_transparent_container: RanStatusTransferTransparentContainer,
}

// Paging
#[derive(Clone)]
pub struct Paging {
    pub ue_paging_identity: UePagingIdentity,
    pub paging_drx: Option<PagingDrx>,
    pub tai_list_for_paging: TaiListForPaging,
    pub paging_priority: Option<PagingPriority>,
    pub ue_radio_capability_for_paging: Option<UeRadioCapabilityForPaging>,
    pub paging_origin: Option<PagingOrigin>,
    pub assistance_data_for_paging: Option<AssistanceDataForPaging>,
    pub nb_iot_paging_e_drx_info: Option<NbIotPagingEDrxInfo>,
    pub nb_iot_paging_drx: Option<NbIotPagingDrx>,
    pub enhanced_coverage_restriction: Option<EnhancedCoverageRestriction>,
    pub wus_assistance_information: Option<WusAssistanceInformation>,
    pub paginge_drx_information: Option<PagingeDrxInformation>,
    pub c_emode_brestricted: Option<CEmodeBrestricted>,
}

// InitialUeMessage
#[derive(Clone)]
pub struct InitialUeMessage {
    pub ran_ue_ngap_id: RanUeNgapId,
    pub nas_pdu: NasPdu,
    pub user_location_information: UserLocationInformation,
    pub rrc_establishment_cause: RrcEstablishmentCause,
    pub five_g_s_tmsi: Option<FiveGSTmsi>,
    pub amf_set_id: Option<AmfSetId>,
    pub ue_context_request: Option<UeContextRequest>,
    pub allowed_nssai: Option<AllowedNssai>,
    pub source_to_target_amf_information_reroute: Option<SourceToTargetAmfInformationReroute>,
    pub selected_plmn_identity: Option<PlmnIdentity>,
    pub iab_node_indication: Option<IabNodeIndication>,
    pub c_emode_b_support_indicator: Option<CEmodeBSupportIndicator>,
    pub ltem_indication: Option<LtemIndication>,
    pub edt_session: Option<EdtSession>,
    pub authenticated_indication: Option<AuthenticatedIndication>,
    pub npn_access_information: Option<NpnAccessInformation>,
}

// DownlinkNasTransport
#[derive(Clone)]
pub struct DownlinkNasTransport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub old_amf: Option<AmfName>,
    pub ran_paging_priority: Option<RanPagingPriority>,
    pub nas_pdu: NasPdu,
    pub mobility_restriction_list: Option<MobilityRestrictionList>,
    pub index_to_rfsp: Option<IndexToRfsp>,
    pub ue_aggregate_maximum_bit_rate: Option<UeAggregateMaximumBitRate>,
    pub allowed_nssai: Option<AllowedNssai>,
    pub srvcc_operation_possible: Option<SrvccOperationPossible>,
    pub enhanced_coverage_restriction: Option<EnhancedCoverageRestriction>,
    pub extended_connected_time: Option<ExtendedConnectedTime>,
    pub ue_differentiation_info: Option<UeDifferentiationInfo>,
    pub c_emode_brestricted: Option<CEmodeBrestricted>,
    pub ue_radio_capability: Option<UeRadioCapability>,
    pub ue_capability_info_request: Option<UeCapabilityInfoRequest>,
    pub end_indication: Option<EndIndication>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
}

// UplinkNasTransport
#[derive(Clone)]
pub struct UplinkNasTransport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub nas_pdu: NasPdu,
    pub user_location_information: UserLocationInformation,
    pub w_agf_identity_information: Option<Vec<u8>>,
    pub tngf_identity_information: Option<Vec<u8>>,
    pub twif_identity_information: Option<Vec<u8>>,
}

// NasNonDeliveryIndication
#[derive(Clone)]
pub struct NasNonDeliveryIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub nas_pdu: NasPdu,
    pub cause: Cause,
}

// RerouteNasRequest
#[derive(Clone)]
pub struct RerouteNasRequest {
    pub ran_ue_ngap_id: RanUeNgapId,
    pub amf_ue_ngap_id: Option<AmfUeNgapId>,
    pub ngap_message: Vec<u8>,
    pub amf_set_id: AmfSetId,
    pub allowed_nssai: Option<AllowedNssai>,
    pub source_to_target_amf_information_reroute: Option<SourceToTargetAmfInformationReroute>,
}

// NgSetupRequest
#[derive(Clone)]
pub struct NgSetupRequest {
    pub global_ran_node_id: GlobalRanNodeId,
    pub ran_node_name: Option<RanNodeName>,
    pub supported_ta_list: SupportedTaList,
    pub default_paging_drx: PagingDrx,
    pub ue_retention_information: Option<UeRetentionInformation>,
    pub nb_iot_default_paging_drx: Option<NbIotDefaultPagingDrx>,
    pub extended_ran_node_name: Option<ExtendedRanNodeName>,
}

// NgSetupResponse
#[derive(Clone)]
pub struct NgSetupResponse {
    pub amf_name: AmfName,
    pub served_guami_list: ServedGuamiList,
    pub relative_amf_capacity: RelativeAmfCapacity,
    pub plmn_support_list: PlmnSupportList,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
    pub ue_retention_information: Option<UeRetentionInformation>,
    pub iab_supported: Option<IabSupported>,
    pub extended_amf_name: Option<ExtendedAmfName>,
}

// NgSetupFailure
#[derive(Clone)]
pub struct NgSetupFailure {
    pub cause: Cause,
    pub time_to_wait: Option<TimeToWait>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// RanConfigurationUpdate
#[derive(Clone)]
pub struct RanConfigurationUpdate {
    pub ran_node_name: Option<RanNodeName>,
    pub supported_ta_list: Option<SupportedTaList>,
    pub default_paging_drx: Option<PagingDrx>,
    pub global_ran_node_id: Option<GlobalRanNodeId>,
    pub ngran_tnl_association_to_remove_list: Option<NgranTnlAssociationToRemoveList>,
    pub nb_iot_default_paging_drx: Option<NbIotDefaultPagingDrx>,
    pub extended_ran_node_name: Option<ExtendedRanNodeName>,
}

// RanConfigurationUpdateAcknowledge
#[derive(Clone)]
pub struct RanConfigurationUpdateAcknowledge {
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// RanConfigurationUpdateFailure
#[derive(Clone)]
pub struct RanConfigurationUpdateFailure {
    pub cause: Cause,
    pub time_to_wait: Option<TimeToWait>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// AmfConfigurationUpdate
#[derive(Clone)]
pub struct AmfConfigurationUpdate {
    pub amf_name: Option<AmfName>,
    pub served_guami_list: Option<ServedGuamiList>,
    pub relative_amf_capacity: Option<RelativeAmfCapacity>,
    pub plmn_support_list: Option<PlmnSupportList>,
    pub amf_tnl_association_to_add_list: Option<AmfTnlAssociationToAddList>,
    pub amf_tnl_association_to_remove_list: Option<AmfTnlAssociationToRemoveList>,
    pub amf_tnl_association_to_update_list: Option<AmfTnlAssociationToUpdateList>,
    pub extended_amf_name: Option<ExtendedAmfName>,
}

// AmfConfigurationUpdateAcknowledge
#[derive(Clone)]
pub struct AmfConfigurationUpdateAcknowledge {
    pub amf_tnl_association_setup_list: Option<AmfTnlAssociationSetupList>,
    pub amf_tnl_association_failed_to_setup_list: Option<TnlAssociationList>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// AmfConfigurationUpdateFailure
#[derive(Clone)]
pub struct AmfConfigurationUpdateFailure {
    pub cause: Cause,
    pub time_to_wait: Option<TimeToWait>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// AmfStatusIndication
#[derive(Clone)]
pub struct AmfStatusIndication {
    pub unavailable_guami_list: UnavailableGuamiList,
}

// NgReset
#[derive(Clone)]
pub struct NgReset {
    pub cause: Cause,
    pub reset_type: ResetType,
}

// NgResetAcknowledge
#[derive(Clone)]
pub struct NgResetAcknowledge {
    pub ue_associated_logical_ng_connection_list: Option<UeAssociatedLogicalNgConnectionList>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// ErrorIndication
#[derive(Clone)]
pub struct ErrorIndication {
    pub amf_ue_ngap_id: Option<AmfUeNgapId>,
    pub ran_ue_ngap_id: Option<RanUeNgapId>,
    pub cause: Option<Cause>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
    pub five_g_s_tmsi: Option<FiveGSTmsi>,
}

// OverloadStart
#[derive(Clone)]
pub struct OverloadStart {
    pub amf_overload_response: Option<OverloadResponse>,
    pub amf_traffic_load_reduction_indication: Option<TrafficLoadReductionIndication>,
    pub overload_start_nssai_list: Option<OverloadStartNssaiList>,
}

// OverloadStop
#[derive(Clone)]
pub struct OverloadStop {}

// UplinkRanConfigurationTransfer
#[derive(Clone)]
pub struct UplinkRanConfigurationTransfer {
    pub son_configuration_transfer_ul: Option<SonConfigurationTransfer>,
    pub endc_son_configuration_transfer_ul: Option<EnDcsonConfigurationTransfer>,
    pub intersystem_son_configuration_transfer_ul: Option<IntersystemSonConfigurationTransfer>,
}

// DownlinkRanConfigurationTransfer
#[derive(Clone)]
pub struct DownlinkRanConfigurationTransfer {
    pub son_configuration_transfer_dl: Option<SonConfigurationTransfer>,
    pub endc_son_configuration_transfer_dl: Option<EnDcsonConfigurationTransfer>,
    pub intersystem_son_configuration_transfer_dl: Option<IntersystemSonConfigurationTransfer>,
}

// WriteReplaceWarningRequest
#[derive(Clone)]
pub struct WriteReplaceWarningRequest {
    pub message_identifier: MessageIdentifier,
    pub serial_number: SerialNumber,
    pub warning_area_list: Option<WarningAreaList>,
    pub repetition_period: RepetitionPeriod,
    pub number_of_broadcasts_requested: NumberOfBroadcastsRequested,
    pub warning_type: Option<WarningType>,
    pub warning_security_info: Option<WarningSecurityInfo>,
    pub data_coding_scheme: Option<DataCodingScheme>,
    pub warning_message_contents: Option<WarningMessageContents>,
    pub concurrent_warning_message_ind: Option<ConcurrentWarningMessageInd>,
    pub warning_area_coordinates: Option<WarningAreaCoordinates>,
}

// WriteReplaceWarningResponse
#[derive(Clone)]
pub struct WriteReplaceWarningResponse {
    pub message_identifier: MessageIdentifier,
    pub serial_number: SerialNumber,
    pub broadcast_completed_area_list: Option<BroadcastCompletedAreaList>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// PwsCancelRequest
#[derive(Clone)]
pub struct PwsCancelRequest {
    pub message_identifier: MessageIdentifier,
    pub serial_number: SerialNumber,
    pub warning_area_list: Option<WarningAreaList>,
    pub cancel_all_warning_messages: Option<CancelAllWarningMessages>,
}

// PwsCancelResponse
#[derive(Clone)]
pub struct PwsCancelResponse {
    pub message_identifier: MessageIdentifier,
    pub serial_number: SerialNumber,
    pub broadcast_cancelled_area_list: Option<BroadcastCancelledAreaList>,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// PwsRestartIndication
#[derive(Clone)]
pub struct PwsRestartIndication {
    pub cell_id_list_for_restart: CellIdListForRestart,
    pub global_ran_node_id: GlobalRanNodeId,
    pub tai_list_for_restart: TaiListForRestart,
    pub emergency_area_id_list_for_restart: Option<EmergencyAreaIdListForRestart>,
}

// PwsFailureIndication
#[derive(Clone)]
pub struct PwsFailureIndication {
    pub pws_failed_cell_id_list: PwsFailedCellIdList,
    pub global_ran_node_id: GlobalRanNodeId,
}

// DownlinkUeAssociatedNrpPaTransport
#[derive(Clone)]
pub struct DownlinkUeAssociatedNrpPaTransport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub routing_id: RoutingId,
    pub nrp_pa_pdu: NrpPaPdu,
}

// UplinkUeAssociatedNrpPaTransport
#[derive(Clone)]
pub struct UplinkUeAssociatedNrpPaTransport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub routing_id: RoutingId,
    pub nrp_pa_pdu: NrpPaPdu,
}

// DownlinkNonUeAssociatedNrpPaTransport
#[derive(Clone)]
pub struct DownlinkNonUeAssociatedNrpPaTransport {
    pub routing_id: RoutingId,
    pub nrp_pa_pdu: NrpPaPdu,
}

// UplinkNonUeAssociatedNrpPaTransport
#[derive(Clone)]
pub struct UplinkNonUeAssociatedNrpPaTransport {
    pub routing_id: RoutingId,
    pub nrp_pa_pdu: NrpPaPdu,
}

// TraceStart
#[derive(Clone)]
pub struct TraceStart {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub trace_activation: TraceActivation,
}

// TraceFailureIndication
#[derive(Clone)]
pub struct TraceFailureIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ngran_trace_id: NgranTraceId,
    pub cause: Cause,
}

// DeactivateTrace
#[derive(Clone)]
pub struct DeactivateTrace {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ngran_trace_id: NgranTraceId,
}

// CellTrafficTrace
#[derive(Clone)]
pub struct CellTrafficTrace {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ngran_trace_id: NgranTraceId,
    pub ngran_cgi: NgranCgi,
    pub trace_collection_entity_ip_address: TransportLayerAddress,
    pub privacy_indicator: Option<PrivacyIndicator>,
    pub trace_collection_entity_uri: Option<UriAddress>,
}

// LocationReportingControl
#[derive(Clone)]
pub struct LocationReportingControl {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub location_reporting_request_type: LocationReportingRequestType,
}

// LocationReportingFailureIndication
#[derive(Clone)]
pub struct LocationReportingFailureIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub cause: Cause,
}

// LocationReport
#[derive(Clone)]
pub struct LocationReport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub user_location_information: UserLocationInformation,
    pub ue_presence_in_area_of_interest_list: Option<UePresenceInAreaOfInterestList>,
    pub location_reporting_request_type: LocationReportingRequestType,
}

// UetnlaBindingReleaseRequest
#[derive(Clone)]
pub struct UetnlaBindingReleaseRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
}

// UeRadioCapabilityInfoIndication
#[derive(Clone)]
pub struct UeRadioCapabilityInfoIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ue_radio_capability: UeRadioCapability,
    pub ue_radio_capability_for_paging: Option<UeRadioCapabilityForPaging>,
    pub ue_radio_capability_eutra_format: Option<UeRadioCapability>,
}

// UeRadioCapabilityCheckRequest
#[derive(Clone)]
pub struct UeRadioCapabilityCheckRequest {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ue_radio_capability: Option<UeRadioCapability>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
}

// UeRadioCapabilityCheckResponse
#[derive(Clone)]
pub struct UeRadioCapabilityCheckResponse {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ims_voice_support_indicator: ImsVoiceSupportIndicator,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}
// PrivateMessage - omitted

// SecondaryRatDataUsageReport
#[derive(Clone)]
pub struct SecondaryRatDataUsageReport {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub pdu_session_resource_secondary_rat_usage_list: PduSessionResourceSecondaryRatUsageList,
    pub handover_flag: Option<HandoverFlag>,
    pub user_location_information: Option<UserLocationInformation>,
}

// UplinkRimInformationTransfer
#[derive(Clone)]
pub struct UplinkRimInformationTransfer {
    pub rim_information_transfer: Option<RimInformationTransfer>,
}

// DownlinkRimInformationTransfer
#[derive(Clone)]
pub struct DownlinkRimInformationTransfer {
    pub rim_information_transfer: Option<RimInformationTransfer>,
}

// ConnectionEstablishmentIndication
#[derive(Clone)]
pub struct ConnectionEstablishmentIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub ue_radio_capability: Option<UeRadioCapability>,
    pub end_indication: Option<EndIndication>,
    pub s_nssai: Option<SNssai>,
    pub allowed_nssai: Option<AllowedNssai>,
    pub ue_differentiation_info: Option<UeDifferentiationInfo>,
    pub dl_cp_security_information: Option<DlCpSecurityInformation>,
    pub nb_iot_ue_priority: Option<NbIotUePriority>,
    pub enhanced_coverage_restriction: Option<EnhancedCoverageRestriction>,
    pub c_emode_brestricted: Option<CEmodeBrestricted>,
    pub ue_radio_capability_id: Option<UeRadioCapabilityId>,
}

// UeRadioCapabilityIdMappingRequest
#[derive(Clone)]
pub struct UeRadioCapabilityIdMappingRequest {
    pub ue_radio_capability_id: UeRadioCapabilityId,
}

// UeRadioCapabilityIdMappingResponse
#[derive(Clone)]
pub struct UeRadioCapabilityIdMappingResponse {
    pub ue_radio_capability_id: UeRadioCapabilityId,
    pub ue_radio_capability: UeRadioCapability,
    pub criticality_diagnostics: Option<CriticalityDiagnostics>,
}

// AmfcpRelocationIndication
#[derive(Clone)]
pub struct AmfcpRelocationIndication {
    pub amf_ue_ngap_id: AmfUeNgapId,
    pub ran_ue_ngap_id: RanUeNgapId,
    pub s_nssai: Option<SNssai>,
    pub allowed_nssai: Option<AllowedNssai>,
}
